#
#
# Copyright Â© 2020-2022 Dell Inc. or its subsidiaries. All Rights Reserved.
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#      http://www.apache.org/licenses/LICENSE-2.0
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
#
#

apiVersion: v1
kind: ServiceAccount
metadata:
  name: {{ .Release.Name }}-node
  namespace: {{ .Release.Namespace }}

---

kind: ClusterRole
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  name: {{ .Release.Name }}-node
rules:
  - apiGroups: [""]
    resources: ["persistentvolumes"]
    verbs: ["create", "delete", "get", "list", "watch", "update"]
  - apiGroups: [""]
    resources: ["persistentvolumesclaims"]
    verbs: ["get", "list", "watch", "update"]
  - apiGroups: [""]
    resources: ["events"]
    verbs: ["get", "list", "watch", "create", "update", "patch"]
  - apiGroups: [""]
    resources: ["nodes"]
    verbs: ["get", "list", "watch", "update", "patch"]
  - apiGroups: ["storage.k8s.io"]
    resources: ["volumeattachments"]
    verbs: ["get", "list", "watch", "update"]
  - apiGroups: ["storage.k8s.io"]
    resources: ["storageclasses"]
    verbs: ["get", "list", "watch"]
  - apiGroups: ["storage.k8s.io"]
    resources: ["volumeattachments"]
    verbs: ["get", "list", "watch", "update"]
  - apiGroups: ["security.openshift.io"]
    resourceNames: ["privileged"]
    resources: ["securitycontextconstraints"]
    verbs: ["use"]


---

kind: ClusterRoleBinding
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  name: {{ .Release.Name }}-node
subjects:
  - kind: ServiceAccount
    name: {{ .Release.Name }}-node
    namespace: {{ .Release.Namespace }}
roleRef:
  kind: ClusterRole
  name: {{ .Release.Name }}-node
  apiGroup: rbac.authorization.k8s.io

---

kind: DaemonSet
apiVersion: apps/v1
metadata:
  name: {{ .Release.Name }}-node
  namespace: {{ .Release.Namespace }}
spec:
  selector:
    matchLabels:
      app: {{ .Release.Name }}-node
  template:
    metadata:
      labels:
        app: {{ .Release.Name }}-node
    spec:
      {{ if .Values.node.nodeSelector }}
      nodeSelector:
      {{- toYaml .Values.node.nodeSelector | nindent 8 }}
      {{ end }}
      {{ if .Values.node.tolerations }}
      tolerations:
      {{- toYaml .Values.node.tolerations | nindent 6 }}
      {{ end }}
      serviceAccount: {{ .Release.Name }}-node
      hostNetwork: true
      hostIPC: true
      containers:
        - name: driver
          securityContext:
            privileged: true
            capabilities:
              add: ["SYS_ADMIN"]
            allowPrivilegeEscalation: true
          image: {{ required "Must provide the PowerStore driver container image." .Values.images.driver }}
          imagePullPolicy: Always
          command: [ "/csi-powerstore" ]
          env:
            - name: CSI_ENDPOINT
              value: /var/run/csi/node-csi.sock
            - name: X_CSI_MODE
              value: node
            - name: X_CSI_DEBUG
              value: "true"
            - name: X_CSI_POWERSTORE_KUBE_NODE_NAME
              valueFrom:
                fieldRef:
                  apiVersion: v1
                  fieldPath: spec.nodeName
            - name: X_CSI_POWERSTORE_NODE_NAME_PREFIX
              value: {{ .Values.nodeNamePrefix }}
            - name: X_CSI_POWERSTORE_NODE_ID_PATH
              value: /node-id
            - name: X_CSI_POWERSTORE_NODE_CHROOT_PATH
              value: /noderoot
            - name: X_CSI_POWERSTORE_TMP_DIR
              value: /var/lib/kubelet/plugins/{{ .Values.driverName }}/tmp
            - name: X_CSI_DRIVER_NAME
              value: {{ .Values.driverName }}
            - name: X_CSI_FC_PORTS_FILTER_FILE_PATH
              value: {{ .Values.nodeFCPortsFilterFile }}
            - name: X_CSI_ENABLE_TRACING
              value: "false"
            - name: X_CSI_DRIVER_NAME
              value: {{ .Values.driverName }}
            {{- if eq .Values.connection.enableCHAP  true }}
            - name: X_CSI_POWERSTORE_ENABLE_CHAP
              value: "true"
            {{- else }}
            - name: X_CSI_POWERSTORE_ENABLE_CHAP
              value: "false"
            {{- end }}
            - name: X_CSI_POWERSTORE_CONFIG_PATH
              value: /powerstore-config/config
          volumeMounts:
            - name: driver-path
              mountPath: /var/lib/kubelet/plugins/{{ .Values.driverName }}
            - name: csi-path
              mountPath: /var/lib/kubelet/plugins/kubernetes.io/csi
              mountPropagation: "Bidirectional"
            - name: pods-path
              mountPath: /var/lib/kubelet/pods
              mountPropagation: "Bidirectional"
            - name: stg
              mountPath: /dev/stg
              mountPropagation: "Bidirectional"
            - name: mnt
              mountPath: /dev/mnt
              mountPropagation: "Bidirectional"
            - name: dev
              mountPath: /dev
            - name: sys
              mountPath: /sys
            - name: run
              mountPath: /run
            - name: node-id
              mountPath: /node-id
            - name: etciscsi
              mountPath: /etc/iscsi
            - name: mpath
              mountPath: /etc/multipath.conf
            - name: noderoot
              mountPath: /noderoot
            - name: powerstore-config
              mountPath: /powerstore-config
      volumes:
        - name: registration-dir
          hostPath:
            path: /var/lib/kubelet/plugins_registry/
            type: DirectoryOrCreate
        - name: driver-path
          hostPath:
            path: /var/lib/kubelet/plugins/{{ .Values.driverName }}
            type: DirectoryOrCreate
        - name: csi-path
          hostPath:
            path: /var/lib/kubelet/plugins/kubernetes.io/csi
        - name: pods-path
          hostPath:
            path: /var/lib/kubelet/pods
            type: Directory
        - name: stg
          hostPath:
            path: /dev/stg
            type: Directory
        - name: mnt
          hostPath:
            path: /dev/mnt
            type: Directory
        - name: dev
          hostPath:
            path: /dev
            type: Directory
        - name: node-id
          hostPath:
            path: {{ required "Must provide the path to file with node identifier." .Values.nodeIDPath }}
            type: File
        - name: etciscsi
          hostPath:
            path: /etc/iscsi
            type: DirectoryOrCreate
        - name: mpath
          hostPath:
            path: /etc/multipath.conf
            type: FileOrCreate
        - name: noderoot
          hostPath:
            path: /
            type: Directory
        - name: sys
          hostPath:
            path: /sys
            type: Directory
        - name: run
          hostPath:
            path: /run
            type: Directory
        - name: powerstore-config
          secret:
            secretName: powerstore-config
